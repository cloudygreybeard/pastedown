---
name: Build, Test and Release

on:
  push:
    tags: ['v*']

jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Swift
      run: |
        # Use the system Swift that comes with Xcode
        echo "Using system Swift version:"
        swift --version

    - name: Generate version information
      run: |
        # Generate version file from git tag
        VERSION=${GITHUB_REF#refs/tags/v}
        BUILD_DATE=$(date -u +"%Y-%m-%d")
        
        mkdir -p Sources/Pastedown
        cat > Sources/Pastedown/Version.swift << EOF
        // Auto-generated version information
        // Do not edit this file manually
        
        struct Version {
            static let version = "$VERSION"
            static let buildDate = "$BUILD_DATE"
        }
        EOF
        
        echo "Generated version: $VERSION"

    - name: Build
      run: swift build -c release

    - name: Test
      run: swift test || echo "No tests found or tests failed"

  release:
    runs-on: macos-latest
    needs: build-and-test
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Swift
      run: |
        # Use the system Swift that comes with Xcode
        echo "Using system Swift version:"
        swift --version

    - name: Generate version information
      run: |
        # Generate version file from git tag
        VERSION=${GITHUB_REF#refs/tags/v}
        BUILD_DATE=$(date -u +"%Y-%m-%d")
        
        mkdir -p Sources/Pastedown
        cat > Sources/Pastedown/Version.swift << EOF
        // Auto-generated version information
        // Do not edit this file manually
        
        struct Version {
            static let version = "$VERSION"
            static let buildDate = "$BUILD_DATE"
        }
        EOF
        
        echo "Generated version: $VERSION"

    - name: Build for Apple Silicon
      run: |
        swift build -c release --triple arm64-apple-macos
        cp .build/release/pastedown ./pastedown-arm64
        chmod +x ./pastedown-arm64

    - name: Build for Intel
      run: |
        swift build -c release --triple x86_64-apple-macos
        cp .build/release/pastedown ./pastedown-x86_64
        chmod +x ./pastedown-x86_64

    - name: Create universal binary
      run: |
        # Create universal binary using lipo
        lipo -create -output ./pastedown ./pastedown-arm64 ./pastedown-x86_64
        chmod +x ./pastedown
        
        # Verify the universal binary
        file ./pastedown
        lipo -info ./pastedown

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./pastedown
        name: pastedown ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Homebrew Formula
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}

        # Calculate SHA256 of the binary
        SHA256=$(shasum -a 256 ./pastedown | cut -d' ' -f1)

        # Setup SSH for deploy key authentication
        mkdir -p ~/.ssh
        echo "${{ secrets.HOMEBREW_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan github.com >> ~/.ssh/known_hosts

        # Clone the homebrew repository using SSH
        git clone git@github.com:cloudygreybeard/homebrew-tap.git homebrew-repo
        cd homebrew-repo

        # Update the formula
        sed -i '' "s|url \".*\"|url \"https://github.com/cloudygreybeard/pastedown/releases/download/v$VERSION/pastedown\"|" Formula/pastedown.rb
        sed -i '' "s/sha256 \".*\"/sha256 \"$SHA256\"/" Formula/pastedown.rb
        sed -i '' "s/version \".*\"/version \"$VERSION\"/" Formula/pastedown.rb

        # Commit and push the changes
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add Formula/pastedown.rb
        git commit -m "Update pastedown to v$VERSION

        - Update URL to v$VERSION release
        - Update SHA256 hash for universal binary
        - Support both Intel and Apple Silicon Macs"
        
        # Push using SSH (deploy key authentication)
        git push origin main

        echo "Updated Homebrew formula for version $VERSION"
        echo "SHA256: ${SHA256}"